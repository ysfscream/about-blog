(window.webpackJsonp=window.webpackJsonp||[]).push([[90],{305:function(a,t,n){"use strict";n.r(t);var r=n(0),e=Object(r.a)({},function(){var a=this,t=a.$createElement,n=a._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[n("h1",{attrs:{id:"npm-和-yarn"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#npm-和-yarn","aria-hidden":"true"}},[a._v("#")]),a._v(" npm 和 yarn")]),a._v(" "),n("p",[n("a",{attrs:{href:"https://jeffjade.com/2017/12/30/135-npm-vs-yarn-detial-memo/#%E5%A6%82%E4%BD%95%E6%9B%B4%E6%96%B0-Npm",target:"_blank",rel:"noopener noreferrer"}},[a._v("参考"),n("OutboundLink")],1)]),a._v(" "),n("h2",{attrs:{id:"npm"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#npm","aria-hidden":"true"}},[a._v("#")]),a._v(" npm")]),a._v(" "),n("blockquote",[n("p",[n("code",[a._v("npm")]),a._v(" 即："),n("a",{attrs:{href:"https://www.npmjs.com/",target:"_blank",rel:"noopener noreferrer"}},[a._v("npm package manager"),n("OutboundLink")],1),a._v("，是一种重用其他开发人员的代码的方法，也是一种与他人共享代码的方式，并且可以很容易地管理不同版本的代码。"),n("code",[a._v("npm")]),a._v(" 开始作为 Node 包管理器，所以你会发现很多模块可以在服务器端使用。也有很多的包添加命令供您在命令行中使用。你还会发现可以在前端使用的软件包。")])]),a._v(" "),n("h3",{attrs:{id:"如何更新-npm"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#如何更新-npm","aria-hidden":"true"}},[a._v("#")]),a._v(" "),n("strong",[a._v("如何更新 Npm")])]),a._v(" "),n("ol",[n("li",[a._v("npm install npm@latest -g （npm install npm -g）")]),a._v(" "),n("li",[a._v("更新(重新下载) Node.js")])]),a._v(" "),n("h2",{attrs:{id:"yarn"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#yarn","aria-hidden":"true"}},[a._v("#")]),a._v(" yarn")]),a._v(" "),n("blockquote",[n("p",[n("code",[a._v("Yarn")]),a._v(" 对你的代码来说是一个包管理器， 你可以通过它使用全世界开发者的代码，或者分享自己的代码。 Yarn 做这些快捷、安全、可靠，所以你不用担心什么。通过 "),n("code",[a._v("Yarn")]),a._v("，你可以使用其他开发者针对不同问题的解决方案，使自己的开发过程更简单。 使用过程中遇到问题，你可以将其上报或者贡献解决方案。一旦问题被修复，Yarn会更新保持同步。")])]),a._v(" "),n("p",[a._v("对多数用户来说，从npm迁移的过程应该非常简单。Yarn和npm使用相同的"),n("code",[a._v("package.json")]),a._v("格式，而且Yarn可以从npm安装依赖包。")]),a._v(" "),n("p",[a._v("如果你打算在现有项目中尝试Yarn，只需执行："),n("code",[a._v("yarn")])]),a._v(" "),n("h2",{attrs:{id:"如何安装-yarn"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#如何安装-yarn","aria-hidden":"true"}},[a._v("#")]),a._v(" "),n("strong",[a._v("如何安装 Yarn")])]),a._v(" "),n("p",[a._v("对于如何安装 "),n("code",[a._v("Yarn")]),a._v("，Yarn 官方给出了很全面的说明，详见 "),n("a",{attrs:{href:"https://yarnpkg.com/zh-Hans/docs/install",target:"_blank",rel:"noopener noreferrer"}},[a._v("Install Yarn"),n("OutboundLink")],1),a._v("；涵盖 MacOs，Windows，Linux 等平台，并且还给出一些备用安装方式，譬如通过 "),n("code",[a._v("npm")]),a._v(" 来安装：")]),a._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[a._v("npm")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" --global yarn\n")])])]),n("p",[a._v("当然，"),n("code",[a._v("Yarn")]),a._v(" 官方在 "),n("a",{attrs:{href:"https://yarnpkg.com/zh-Hans/docs/install#alternatives-tab",target:"_blank",rel:"noopener noreferrer"}},[a._v("Yarn 备选安装方式"),n("OutboundLink")],1),a._v("有明确讲道：")]),a._v(" "),n("blockquote",[n("p",[a._v("一般来说, 不推荐通过 "),n("code",[a._v("npm")]),a._v(" 安装 "),n("code",[a._v("Yarn")]),a._v("，在用基于 Node 的包管理器安装 Yarn 时，该包未被签名， 并且只通过基本的 "),n("code",[a._v("SHA1")]),a._v("散列进行唯一完整性检查。这在安装系统级应用时有安全风险。因为这些原因，高度推荐用你的操作系统最适合的方式来安装 Yarn。")])]),a._v(" "),n("p",[a._v("但在实际使用中，这倒是最为方便的方式之一，迄今倒也没遇到什么问题；当然，最好按照官方推荐的方式；如果你使用并熟悉 Mac 操作系统，用推荐方式安装 Yarn 也是很简单："),n("code",[a._v("brew install yarn")]),a._v("(笔者注)。")]),a._v(" "),n("h2",{attrs:{id:"如何更新-yarn"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#如何更新-yarn","aria-hidden":"true"}},[a._v("#")]),a._v(" 如何更新 Yarn")]),a._v(" "),n("p",[a._v("对于如何更新 Yarn，可以结合安装时候对应命令；如果是 Mac 操作系统，使用 "),n("code",[a._v("brew")]),a._v(" 安装，那么如此操作予以更新：")]),a._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[a._v("brew upgrade yarn\n")])])]),n("p",[a._v("也可以使用 "),n("code",[a._v("yarn")]),a._v(" 本身来更新自己：")]),a._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[a._v("yarn global add yarn\n")])])]),n("h2",{attrs:{id:"npm-与-yarn-常用命令对比"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#npm-与-yarn-常用命令对比","aria-hidden":"true"}},[a._v("#")]),a._v(" npm 与 yarn 常用命令对比")]),a._v(" "),n("h3",{attrs:{id:"有所区别的命令"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#有所区别的命令","aria-hidden":"true"}},[a._v("#")]),a._v(" "),n("strong",[a._v("有所区别的命令")])]),a._v(" "),n("table",[n("thead",[n("tr",[n("th",[a._v("Npm")]),a._v(" "),n("th",[a._v("Yarn")]),a._v(" "),n("th",[a._v("功能描述")])])]),a._v(" "),n("tbody",[n("tr",[n("td",[a._v("npm install(npm i)")]),a._v(" "),n("td",[a._v("yarn install(yarn)")]),a._v(" "),n("td",[a._v("根据 package.json 安装所有依赖")])]),a._v(" "),n("tr",[n("td",[a._v("npm i –save [package]")]),a._v(" "),n("td",[a._v("yarn add [package]")]),a._v(" "),n("td",[a._v("添加依赖包")])]),a._v(" "),n("tr",[n("td",[a._v("npm i –save-dev [package]")]),a._v(" "),n("td",[a._v("yarn add [package] -–dev")]),a._v(" "),n("td",[a._v("添加依赖包至 devDependencies")])]),a._v(" "),n("tr",[n("td",[a._v("npm i -g [package]")]),a._v(" "),n("td",[a._v("yarn global add [package]")]),a._v(" "),n("td",[a._v("进行全局安装依赖包")])]),a._v(" "),n("tr",[n("td",[a._v("npm update –save")]),a._v(" "),n("td",[a._v("yarn upgrade [package]")]),a._v(" "),n("td",[a._v("升级依赖包")])]),a._v(" "),n("tr",[n("td",[a._v("npm uninstall [package]")]),a._v(" "),n("td",[a._v("yarn remove [package]")]),a._v(" "),n("td",[a._v("移除依赖包")])])])]),a._v(" "),n("h3",{attrs:{id:"相同操作的命令"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#相同操作的命令","aria-hidden":"true"}},[a._v("#")]),a._v(" "),n("strong",[a._v("相同操作的命令")])]),a._v(" "),n("table",[n("thead",[n("tr",[n("th",[a._v("Npm")]),a._v(" "),n("th",[a._v("Yarn")]),a._v(" "),n("th",[a._v("功能描述")])])]),a._v(" "),n("tbody",[n("tr",[n("td",[a._v("npm run")]),a._v(" "),n("td",[a._v("yarn run")]),a._v(" "),n("td",[a._v("运行 package.json 中预定义的脚本")])]),a._v(" "),n("tr",[n("td",[a._v("npm config list")]),a._v(" "),n("td",[a._v("yarn config list")]),a._v(" "),n("td",[a._v("查看配置信息")])]),a._v(" "),n("tr",[n("td",[a._v("npm config set registry 仓库地址")]),a._v(" "),n("td",[a._v("yarn config set registry 仓库地址")]),a._v(" "),n("td",[a._v("更换仓库地址")])]),a._v(" "),n("tr",[n("td",[a._v("npm init")]),a._v(" "),n("td",[a._v("yarn init")]),a._v(" "),n("td",[a._v("互动式创建/更新 package.json 文件")])]),a._v(" "),n("tr",[n("td",[a._v("npm list")]),a._v(" "),n("td",[a._v("yarn list")]),a._v(" "),n("td",[a._v("查看当前目录下已安装的node包")])]),a._v(" "),n("tr",[n("td",[a._v("npm login")]),a._v(" "),n("td",[a._v("yarn login")]),a._v(" "),n("td",[a._v("保存你的用户名、邮箱")])]),a._v(" "),n("tr",[n("td",[a._v("npm logout")]),a._v(" "),n("td",[a._v("yarn logout")]),a._v(" "),n("td",[a._v("删除你的用户名、邮箱")])]),a._v(" "),n("tr",[n("td",[a._v("npm outdated")]),a._v(" "),n("td",[a._v("yarn outdated")]),a._v(" "),n("td",[a._v("检查过时的依赖包")])]),a._v(" "),n("tr",[n("td",[a._v("npm link")]),a._v(" "),n("td",[a._v("yarn link")]),a._v(" "),n("td",[a._v("开发时链接依赖包，以便在其他项目中使用")])]),a._v(" "),n("tr",[n("td",[a._v("npm unlink")]),a._v(" "),n("td",[a._v("yarn unlink")]),a._v(" "),n("td",[a._v("取消链接依赖包")])]),a._v(" "),n("tr",[n("td",[a._v("npm publish")]),a._v(" "),n("td",[a._v("yarn publish")]),a._v(" "),n("td",[a._v("将包发布到 npm")])]),a._v(" "),n("tr",[n("td",[a._v("npm test")]),a._v(" "),n("td",[a._v("yarn test")]),a._v(" "),n("td",[a._v("测试 = yarn run test")])]),a._v(" "),n("tr",[n("td",[a._v("npm bin")]),a._v(" "),n("td",[a._v("yarn bin")]),a._v(" "),n("td",[a._v("显示 bin 文件所在的安装目录")])]),a._v(" "),n("tr",[n("td",[a._v("nom info")]),a._v(" "),n("td",[a._v("yarn info")]),a._v(" "),n("td",[a._v("显示一个包的信息")])])])]),a._v(" "),n("h3",{attrs:{id:"npm-独有的命令"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#npm-独有的命令","aria-hidden":"true"}},[a._v("#")]),a._v(" "),n("strong",[a._v("Npm 独有的命令")])]),a._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://docs.npmjs.com/cli/rebuild",target:"_blank",rel:"noopener noreferrer"}},[a._v("npm rebuild pacakgename"),n("OutboundLink")],1),a._v(": 用于更改包内容后进行重建；比如常见的 "),n("code",[a._v("npm rebuild node-sass")]),a._v("；当使用 Sass（Scss） 来作样式表预处理器，再打包的时候，你可能会遇见如下错误；而解决此问题，最为简单的方式即使用 "),n("code",[a._v("rebuild")]),a._v(" 命令，对 "),n("a",{attrs:{href:"https://www.npmjs.com/package/node-sass",target:"_blank",rel:"noopener noreferrer"}},[a._v("node-sass"),n("OutboundLink")],1),a._v(" 进行重建即可。")])]),a._v(" "),n("h3",{attrs:{id:"yarn-独有的命令"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#yarn-独有的命令","aria-hidden":"true"}},[a._v("#")]),a._v(" "),n("strong",[a._v("Yarn 独有的命令")])]),a._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://yarnpkg.com/zh-Hans/docs/cli/import",target:"_blank",rel:"noopener noreferrer"}},[a._v("yarn import"),n("OutboundLink")],1),a._v("：依据原npm安装后的"),n("code",[a._v("node_modules")]),a._v("目录生成一份"),n("code",[a._v("yarn.lock")]),a._v("文件；")]),a._v(" "),n("li",[n("a",{attrs:{href:"https://yarnpkg.com/zh-Hans/docs/cli/licenses",target:"_blank",rel:"noopener noreferrer"}},[a._v("yarn licenses"),n("OutboundLink")],1),a._v("：列出已安装包的许可证信息；")]),a._v(" "),n("li",[n("a",{attrs:{href:"https://yarnpkg.com/zh-Hans/docs/cli/pack",target:"_blank",rel:"noopener noreferrer"}},[a._v("yarn pack"),n("OutboundLink")],1),a._v("：创建一个压缩的包依赖 gzip 档案；")]),a._v(" "),n("li",[n("a",{attrs:{href:"https://yarnpkg.com/zh-Hans/docs/cli/why",target:"_blank",rel:"noopener noreferrer"}},[a._v("yarn why"),n("OutboundLink")],1),a._v("：显示有关一个包为何被安装的信息。")]),a._v(" "),n("li",[n("a",{attrs:{href:"https://yarnpkg.com/zh-Hans/docs/cli/autoclean",target:"_blank",rel:"noopener noreferrer"}},[a._v("yarn autoclean"),n("OutboundLink")],1),a._v("：从包依赖里清除并移除不需要的文件。")])]),a._v(" "),n("h3",{attrs:{id:"管理-node-版本"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#管理-node-版本","aria-hidden":"true"}},[a._v("#")]),a._v(" "),n("strong",[a._v("管理 Node 版本")])]),a._v(" "),n("ul",[n("li",[n("code",[a._v("nvm")]),a._v(" 是一个独立软件包：在安装之时，"),n("code",[a._v("nvm")]),a._v(" 将不同的 node 版本存储到 "),n("em",[a._v("~/.nvm//")]),a._v(" 下，然后修改 "),n("code",[a._v("$PATH")]),a._v("，将指定版本的 node 路径加入，如此我们调用的 node 命令，即是所指定版本的 node；")])]),a._v(" "),n("p",[a._v("npm 脚本 http://www.ruanyifeng.com/blog/2016/10/npm_scripts.html")]),a._v(" "),n("h2",{attrs:{id:"yarn-lock-和-package-lock-json"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#yarn-lock-和-package-lock-json","aria-hidden":"true"}},[a._v("#")]),a._v(" yarn.lock 和 package-lock.json")]),a._v(" "),n("blockquote",[n("p",[a._v("一个项目周期很长，在不断开发的同时，而依赖的库也会有很大改变；有时候你可能只想运行 "),n("code",[a._v("npm i")]),a._v(" 更新没有下载的插件，却不想偶尔会将依赖的一些其他插件更到最新，导致各种奇葩问题，"),n("code",[a._v("package-lock.json")]),a._v(" 和 "),n("code",[a._v("yarn.lock")]),a._v(" 就是为解决这种问题而设定的存在。")])]),a._v(" "),n("p",[a._v("锁定 依赖包中的版本 确保在不同的机子上安装相同的依赖不会升级")]),a._v(" "),n("p",[a._v("文件是自动产生的，而且应该完全被管理。 当你用 Yarn/npm CLI 增加／升级／删除依赖，它将自动更新你的文件。 不要直接编辑这个文件，那样很容易弄坏某些东西。")]),a._v(" "),n("p",[n("strong",[a._v("看来 npm 和 Yarn 在安装包的速度差异和要安装的包个数强相关，不过不管怎么样，Yarn 都比 npm 要快，更简洁的输出")]),a._v("。")]),a._v(" "),n("p",[a._v("因为 npm 采用串行安装 安装完一个才安装下一个，yarn 则使用并行安装")]),a._v(" "),n("p",[a._v("在安装一个要打包到生产环境的安装包时，你应该使用 "),n("code",[a._v("npm install --save")]),a._v("，如果你在安装一个用于开发环境的安装包（例如，linter, 测试库等），你应该使用 "),n("code",[a._v("npm install --save-dev")]),a._v("。请在 "),n("a",{attrs:{href:"https://docs.npmjs.com/cli/install",target:"_blank",rel:"noopener noreferrer"}},[a._v("npm 文档"),n("OutboundLink")],1),a._v(" 中查找更多信息。")])])},[],!1,null,null,null);t.default=e.exports}}]);