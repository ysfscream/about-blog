(window.webpackJsonp=window.webpackJsonp||[]).push([[179],{488:function(e,t,s){"use strict";s.r(t);var a=s(0),r=Object(a.a)({},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"js-replace-方法中的分组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js-replace-方法中的分组","aria-hidden":"true"}},[e._v("#")]),e._v(" Js replace 方法中的分组")]),e._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[e._v("使用 $\n")])])]),s("blockquote",[s("p",[s("strong",[e._v("replace()")]),e._v(" 方法返回一个由替换值替换一些或所有匹配的模式后的新字符串。模式可以是一个字符串或者一个"),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/RegExp",target:"_blank",rel:"noopener noreferrer"}},[e._v("正则表达式"),s("OutboundLink")],1),e._v(", 替换值可以是一个字符串或者一个每次匹配都要调用的函数。")])]),e._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[e._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("replace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("regexp"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v("substr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" newSubStr"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])])]),s("p",[e._v("$n -> 假如第一个参数是 "),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/RegExp",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("RegExp")]),s("OutboundLink")],1),e._v("对象，并且 n 是个小于100的非负整数，那么插入第 n 个括号匹配的字符串。")]),e._v(" "),s("p",[s("strong",[e._v("每一个括号是一个分组 "),s("code",[e._v("$0")]),e._v(" - "),s("code",[e._v("$9")]),e._v(" 代表的分组")])]),e._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// 在匹配到的两个分组，替换后加入空格")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"LoveYou"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("replace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[e._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[e._v("([a-z])([A-Z])")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[e._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-flags"}},[e._v("g")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'$1 $2'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Love You"')]),e._v("\n")])])])])},[],!1,null,null,null);t.default=r.exports}}]);