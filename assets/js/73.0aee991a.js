(window.webpackJsonp=window.webpackJsonp||[]).push([[73],{333:function(t,e,i){"use strict";i.r(e);var n=i(0),s=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",{staticClass:"content"},[i("h1",{attrs:{id:"前端的一些方法论"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#前端的一些方法论","aria-hidden":"true"}},[t._v("#")]),t._v(" 前端的一些方法论")]),t._v(" "),i("ol",[i("li")]),t._v(" "),i("ul",[i("li",[i("p",[t._v("<归治> 将界面能力和服务能力做好归类，严格地执行：同类合并，异类分开")])]),t._v(" "),i("li",[i("p",[t._v("<自治> 减少模块/服务之间的交互，如果一定要交互，做好模块的自治，避免侵入性调用，做好类方法、类属性的保护")])]),t._v(" "),i("li",[i("p",[t._v("<约束> 严格遵循 SRP 原则，保持程序的流水线控制，避免程序越过规定流程跳跃性处理，一个变因绝不要交给两个对象去管理")])])])])}],!1,null,null,null);s.options.__file="前端的一些方法论.md";e.default=s.exports}}]);