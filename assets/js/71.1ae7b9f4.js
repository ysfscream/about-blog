(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{304:function(t,a,e){"use strict";e.r(a);var n=e(0),r=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("div",{staticClass:"content"},[e("h1",{attrs:{id:"flutter-widget"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flutter-widget","aria-hidden":"true"}},[t._v("#")]),t._v(" Flutter widget")]),t._v(" "),e("h2",{attrs:{id:"cliprrect-widget"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cliprrect-widget","aria-hidden":"true"}},[t._v("#")]),t._v(" ClipRRect Widget")]),t._v(" "),e("blockquote",[e("p",[t._v("如果想让矩形的 Widget 变圆角，可以使用该 widget")])]),t._v(" "),e("div",{staticClass:"language-dart extra-class"},[e("pre",{pre:!0,attrs:{class:"language-dart"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ClipRRect")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n borderRadius"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n   BorderRadius"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("circular")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("16.0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   child"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("MyDishPicWidget")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("如果想切圆形可以使用ClipOval，切路径可以使用ClipPath;")]),t._v(" "),e("h2",{attrs:{id:"align"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#align","aria-hidden":"true"}},[t._v("#")]),t._v(" Align")]),t._v(" "),e("blockquote",[e("p",[t._v("Align一般都是当做一个控件的属性，设置child的对齐方式，例如居中、居左居右等，并根据child尺寸调节自身尺寸。")])]),t._v(" "),e("ul",[e("li",[e("p",[t._v("当widthFactor和heightFactor为null的时候，当其有限制条件的时候，Align会根据限制条件尽量的扩展自己的尺寸，当没有限制条件的时候，会调整到child的尺寸；")])]),t._v(" "),e("li",[e("p",[t._v("当widthFactor或者heightFactor不为null的时候，Aligin会根据factor属性，扩展自己的尺寸，例如设置widthFactor为2.0的时候，那么，Align的宽度将会是child的两倍。")])]),t._v(" "),e("li",[e("p",[t._v("alignment 对齐方式，一般会使用系统默认提供的9种方式，但是并不是说只有这9种，系统提供的9种方式只是预先定义好的。")])])]),t._v(" "),e("p",[e("code",[t._v("top center bottom")])]),t._v(" "),e("p",[e("code",[t._v("left center right")])]),t._v(" "),e("p",[t._v("也可以自定义："),e("code",[t._v("Aligment(1.0, 1.0)")])]),t._v(" "),e("p",[t._v("Alignment实际上是包含了两个属性的，其中第一个参数，-1.0是左边对齐，1.0是右边对齐，第二个参数，-1.0是顶部对齐，1.0是底部对齐。根据这个规则，也可以自定义对齐方式.")]),t._v(" "),e("h2",{attrs:{id:"padding"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#padding","aria-hidden":"true"}},[t._v("#")]),t._v(" Padding")]),t._v(" "),e("ul",[e("li",[t._v("EdgeInsets.symmetric(vertical: 20, horizontal: 10) ，可以指定垂直和水平方向的边距，也可以单独指定垂直或者水平方向的边距")])]),t._v(" "),e("h2",{attrs:{id:"transiton"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#transiton","aria-hidden":"true"}},[t._v("#")]),t._v(" transiton")]),t._v(" "),e("ul",[e("li",[t._v("包含的 widget 有 FadeTransiton, ScaleTransiton, RotationTransition")])]),t._v(" "),e("h2",{attrs:{id:"layoutbuilder"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#layoutbuilder","aria-hidden":"true"}},[t._v("#")]),t._v(" Layoutbuilder")]),t._v(" "),e("ul",[e("li",[t._v("如要获得某一 Widget 的尺寸范围，只需给它包裹一层 LayoutBuilder 的 Widget; 在构建前如果需要确定小部件有多大则可以使用LayoutBuilder;")])])])}],!1,null,null,null);r.options.__file="Flutter widget.md";a.default=r.exports}}]);