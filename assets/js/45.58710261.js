(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{374:function(t,e,a){"use strict";a.r(e);var i=a(0),r=Object(i.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"css-标准盒模型和怪异盒模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css-标准盒模型和怪异盒模型","aria-hidden":"true"}},[t._v("#")]),t._v(" CSS 标准盒模型和怪异盒模型")]),t._v(" "),a("h2",{attrs:{id:"标准盒模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#标准盒模型","aria-hidden":"true"}},[t._v("#")]),t._v(" 标准盒模型")]),t._v(" "),a("ul",[a("li",[t._v("元素的 width、height 只包含内容 content，不包含 border 和 padding 值；")]),t._v(" "),a("li",[t._v("盒子的大小由元素的宽高、边框和内边距决定。")])]),t._v(" "),a("h2",{attrs:{id:"怪异盒模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#怪异盒模型","aria-hidden":"true"}},[t._v("#")]),t._v(" 怪异盒模型")]),t._v(" "),a("ul",[a("li",[t._v("元素的 width、height 不仅包括 content，还包括 border 和 padding；")]),t._v(" "),a("li",[t._v("盒子的大小取决于 width、height，修改 border 和 padding 值不能改变盒子的大小。")])])])}],!1,null,null,null);r.options.__file="CSS 标准盒模型和怪异盒模型.md";e.default=r.exports}}]);