(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{290:function(t,a,e){"use strict";e.r(a);var i=e(0),r=Object(i.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("div",{staticClass:"content"},[e("h1",{attrs:{id:"语言的划分"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#语言的划分","aria-hidden":"true"}},[t._v("#")]),t._v(" 语言的划分")]),t._v(" "),e("h2",{attrs:{id:"动态语言-和-静态语言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#动态语言-和-静态语言","aria-hidden":"true"}},[t._v("#")]),t._v(" 动态语言 和 静态语言")]),t._v(" "),e("blockquote",[e("p",[t._v("通常我们所说的动态语言和静态语言是指 动态类型语言 和 静态类型语言")])]),t._v(" "),e("ol",[e("li",[e("p",[t._v("动态类型语言：动态类型语言是指在运行期间才去做数据类型检查的语言，也就是说，在用动态类型的语言编程时，永远也不用给任何变量指定数据类型，该语言会在你第一次赋值给变量时，在内部将数据类型记录下来。Python和Ruby就是一种典型的动态类型语言，其他的各种脚本语言如VBScript也多少属于动态类型语言")])]),t._v(" "),e("li",[e("p",[t._v("静态类型语言：静态类型语言与动态类型语言刚好相反，它的数据类型是在编译期间检查的，也就是说在写程序时要声明所有变量的数据类型，C/C++是静态类型语言的典型代表，其他的静态类型语言还有C#、JAVA等")])])]),t._v(" "),e("p",[e("strong",[t._v("对于动态语言与静态语言的区分，套用一句流行的话就是：Static typing when possible, dynamic typing when needed。（平时用前者 必要时用后者）")])]),t._v(" "),e("h2",{attrs:{id:"编译型-和-解释型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#编译型-和-解释型","aria-hidden":"true"}},[t._v("#")]),t._v(" 编译型 和 解释型")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("编译型：一次把所有的代码转换成机器语言，然后写成可执行文件")])]),t._v(" "),e("li",[e("p",[t._v("解释型：在程序运行的前一刻，还只有源程序而没有可执行程序；而程序每执行到源程序的某一条指令，则会有一个称之为解释程序的外壳程序将源代码转换成二进制代码以供执行 简而言之 需要在特定的语言环境下才能执行")])]),t._v(" "),e("li",[e("p",[t._v("编译型与解释型，两者各有利弊。前者由于程序执行速度快，同等条件下对系统要求较低，因此像开发操作系统、大型应用程序、数据库系统等时都采用它，像C/C++、Pascal/Object   Pascal（Delphi）、VB等基本都可视为编译语言，而一些网页脚本、服务器脚本及辅助开发接口这样的对速度要求不高、对不同系统平台间的兼容性有一定要求的程序则通常使用解释性语言，如Java、JavaScript、VBScript、Perl、Python等等")])])]),t._v(" "),e("h2",{attrs:{id:"强类型定义语言-和-弱类型定义语言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#强类型定义语言-和-弱类型定义语言","aria-hidden":"true"}},[t._v("#")]),t._v(" 强类型定义语言 和 弱类型定义语言")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("强类型定义语言：强制数据类型定义的语言。也就是说，一旦一个变量被指定了某个数据类型，如果不经过强制转换，那么它就永远是这个数据类型了。举个例子：如果你定义了一个整型变量a,那么程序根本不可能将a当作字符串类型处理。强类型定义语言是类型安全的语言。")])]),t._v(" "),e("li",[e("p",[t._v("弱类型定义语言：数据类型可以被忽略的语言。它与强类型定义语言相反, 一个变量可以赋不同数据类型的值。")])])]),t._v(" "),e("p",[e("strong",[t._v("Python是动态语言，是强类型定义语言（类型安全的语言）; VBScript是动态语言，是弱类型定义语言（类型不安全的语言）; JAVA是静态语言，是强类型定义语言（类型安全的语言)")])])])}],!1,null,null,null);r.options.__file="语言的划分.md";a.default=r.exports}}]);